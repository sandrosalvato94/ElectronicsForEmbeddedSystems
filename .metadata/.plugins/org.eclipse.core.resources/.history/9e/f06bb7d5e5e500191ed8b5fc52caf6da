/*
 * adc.c
 *
 *  Created on: Sep 30, 2019
 *      Author: Alessandro
 */

#include "../inc/adc.h"

static I2C_HandleTypeDef  *adc_i2c;
static uint8_t conf_buffer[3]   = {ADC_CONF_REG, 0x85, 0x08};
static uint8_t LO_cmp_buffer[3] = {ADC_LO_TH_REG, ADC_CMP_MODE_LO_TH_MSBs, ADC_CMP_MODE_LO_TH_LSBs};
static uint8_t HI_cmp_buffer[3] = {ADC_HI_TH_REG, ADC_CMP_MODE_HI_TH_MSBs, ADC_CMP_MODE_HI_TH_LSBs};

static uint8_t lux[2];
static uint16_t reading;
static float voltage;

static float gains[8] = {6.144, 4.096, 2.048, 1.024, 0.512, 0.256, 0.256, 0.256};

static uint8_t tmp_reg;


void ADC_init(I2C_HandleTypeDef *p_hi2c)
{
	adc_i2c = p_hi2c;

	tmp_reg = 0;

	tmp_reg |= (ADC_LOW_POW_MODE_BIT<<7); //bit 7
	tmp_reg |= (ADC_INP_MUX_CONF_BIT<<4); //bit 6, 5, 4
	tmp_reg |= (ADC_PRG_GAIN_AMP_BIT<<1); //bit 3, 2, 1
	tmp_reg |= (ADC_DEV_OP_MODE_BIT); //bit 0
	conf_buffer[1] = tmp_reg;


	tmp_reg = 0;
	tmp_reg |= (ADC_DATA_RATE_BIT)<<5; //bit 7, 6, 5
	tmp_reg |= (ADC_CMP_MODE_BIT)<<4;  //bit 4
	tmp_reg |= (ADC_CMP_POL_BIT)<<3;   //bit 3
	tmp_reg |= (ADC_CMP_LAT_BIT)<<2;   //bit 2
	tmp_reg |= (ADC_CMP_QUEUE_BIT)<<1; //bit 1, 0
	conf_buffer[2] = tmp_reg;

	HAL_I2C_Master_Transmit(adc_i2c, ADC_ADDRESS <<1, conf_buffer,     3, 250);
	HAL_I2C_Master_Transmit(adc_i2c, ADC_ADDRESS <<1, LO_cmp_buffer,   3, 250);
	HAL_I2C_Master_Transmit(adc_i2c, ADC_ADDRESS <<1, HI_cmp_buffer,   3, 250);
}

float ADC_do_conversion()
{

	HAL_I2C_Master_Transmit(adc_i2c, ADC_ADDRESS <<1, conf_buffer,   3, 250); //command itself
	HAL_I2C_Master_Transmit(adc_i2c, ADC_ADDRESS<<1, ADC_CONV_REG, 1, 250);
    HAL_Delay(25);
    HAL_I2C_Master_Receive(adc_i2c, ADC_ADDRESS<<1, lux, 2, 250);

    reading = (lux[0] << 8 | lux[1]);
    voltage = (float)reading*((gains[ADC_PRG_GAIN_AMP_BIT-1])/(32768.0));

    return voltage;
}
